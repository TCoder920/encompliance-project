version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-encompliance}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build: ./encompliance-backend
    volumes:
      - ./encompliance-documents:/app/encompliance-documents
      - ./document_embeddings:/app/document_embeddings
      - ./document_indexes:/app/document_indexes
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db/${DB_NAME:-encompliance}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-changethissecretkeyinproduction}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-10080}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
      - PDF_STORAGE_PATH=/app/encompliance-documents
    restart: unless-stopped

  # Frontend
  frontend:
    build: ./encompliance-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: 