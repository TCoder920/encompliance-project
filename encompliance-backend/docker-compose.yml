version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./:/app/
    environment:
      - ENVIRONMENT=development
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=encompliance
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/encompliance
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-dummy_access_key}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-dummy_secret_key}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minio_user}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minio_password}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - STRIPE_API_KEY=${STRIPE_API_KEY:-sk_test_dummy}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-whsec_dummy}
    depends_on:
      - db
      - minio
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=encompliance
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minio_user}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minio_password}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  minio_data:
